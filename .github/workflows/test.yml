name: Unit Tests
env:
  # increment this when downloads substantially change to avoid the internet
  DOWNLOAD_CACHE_VERSION: '8'
  CAPTURE_PROCESS_REPLAY: 1
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  osxtests:
    strategy:
      fail-fast: false
      matrix:
        backend: [amd]

    name: Tests on MacOS (${{ matrix.backend }})
    runs-on: macos-15
    timeout-minutes: 45
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # NOTE: this fetches the HEAD commit of the PR
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Cache python packages
        uses: actions/cache@v4
        with:
          path: /Users/runner/Library/Python/3.12/lib/python/site-packages
          key: mockgpu-osx-${{ matrix.backend }}-packages-${{ hashFiles('**/setup.py') }}
      - name: Set env
        run: printf "${{ matrix.backend == 'amd' && 'MOCKGPU=1\nAMD=1\nFORWARD_ONLY=1' }}" >> $GITHUB_ENV
      - name: Install comgr
        if: matrix.backend == 'amd'
        run: |
          sudo mkdir -p /usr/local/lib
          curl -s -H "Authorization: token $GH_TOKEN" curl -s https://api.github.com/repos/nimlgen/amdcomgr_dylib/releases/latest | \
            jq -r '.assets[] | select(.name == "libamd_comgr.dylib").browser_download_url' | \
            sudo xargs curl -L -o /usr/local/lib/libamd_comgr.dylib
      - name: Install remu
        if: matrix.backend == 'amd'
        run: |
          curl -s -H "Authorization: token $GH_TOKEN" curl -s https://api.github.com/repos/Qazalin/remu/releases/latest | \
            jq -r '.assets[] | select(.name == "libremu.dylib").browser_download_url' | \
            sudo xargs curl -L -o /usr/local/lib/libremu.dylib
      - name: Install dependencies
        run: pip install --user -e '.[testing]' --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Check Device.DEFAULT and print some source
        run: |
          PYTHONPATH=${{ github.workspace }} python3 -c "from tinygrad import Device; assert Device.DEFAULT == 'AMD', Device.DEFAULT"
          DEBUG=5 PYTHONPATH=${{ github.workspace }} FORWARD_ONLY=1 python3 test/test_ops.py TestOps.test_add
      - name: Run pytest (amd)
        if: matrix.backend=='amd'
        run: python -m pytest -n=auto test/test_hcq.py test/test_tiny.py --durations=20
  windowstests:
    strategy:
      fail-fast: false
      matrix:
        backend: [amd]

    name: Tests on Windows (${{ matrix.backend }})
    runs-on: windows-2022
    timeout-minutes: 45
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # NOTE: this fetches the HEAD commit of the PR
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Cache python packages
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\Python\Python312\site-packages
          key: mockgpu-windows-${{ matrix.backend }}-packages-${{ hashFiles('**/setup.py') }}
      - name: Set env
        run: printf "${{ matrix.backend == 'amd' && 'MOCKGPU=1\nAMD=1\nFORWARD_ONLY=1' }}" >> $GITHUB_ENV
      - name: Install comgr
        if: matrix.backend == 'amd'
        shell: pwsh
        run: |
          New-Item -Path "C:/usr/local/lib" -ItemType Directory -Force
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/nimlgen/amdcomgr_dylib/releases/latest" -Headers @{Authorization="token $env:GH_TOKEN"}
          $url = $response.assets | Where-Object { $_.name -eq "libamd_comgr.dylib" } | Select-Object -ExpandProperty browser_download_url
          Invoke-WebRequest -Uri $url -OutFile "C:/usr/local/lib/libamd_comgr.dylib"
      - name: Install remu
        if: matrix.backend == 'amd'
        shell: pwsh
        run: |
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/Qazalin/remu/releases/latest" -Headers @{Authorization="token $env:GH_TOKEN"}
          $url = $response.assets | Where-Object { $_.name -eq "libremu.dylib" } | Select-Object -ExpandProperty browser_download_url
          Invoke-WebRequest -Uri $url -OutFile "C:/usr/local/lib/libremu.dylib"
      - name: Install dependencies
        run: pip install --user -e '.[testing]' --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Check Device.DEFAULT and print some source
        run: |
          PYTHONPATH=${{ github.workspace }} python3 -c "from tinygrad import Device; assert Device.DEFAULT == 'AMD', Device.DEFAULT"
          DEBUG=5 PYTHONPATH=${{ github.workspace }} FORWARD_ONLY=1 python3 test/test_ops.py TestOps.test_add
      - name: Run pytest (amd)
        if: matrix.backend=='amd'
        run: python -m pytest -n=auto test/test_hcq.py test/test_tiny.py --durations=20
